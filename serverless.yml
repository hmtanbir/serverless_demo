app: Demo
service: Demo
useDotenv: true
frameworkVersion: ">=1.1.0 <3.0.0"

plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline
  # - serverless-domain-manager
  # - serverless-dynamo-stream-plugin
  # - serverless-dynamodb-local
  - serverless-plugin-log-retention
  - serverless-deployment-bucket
custom:
  accountId: !Ref AWS::AccountId
  pEnvironment: ${opt:stage, self:provider.stage}
  logRetentionInDays: ${env:logRetentionInDays}

  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: false
    packager: "yarn"
  dynamodb:
    stages:
      - dev
  customDomain:
    domainName: ${env:DOMAIN_NAME}
    basePath: ${env:DOMAIN_NAME_PATH}
    stage: ${self:provider.stage}
#    createRoute53Record: true

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  # update the node version in the runtime to 16 when deploying in AWS, for offline use 14
  runtime: nodejs14.x
  apiGateway:
    apiKeys:
      - ${env:API_KEY}
    request:

  versionFunctions: false
  timeout: 10
  websocketsApiRouteSelectionExpression: $request.body.action
  logs:
    websocket:
      level: ERROR
  deploymentBucket:
    name: PROJECT_NM-api-deployment-bucket
    # name: ${env:env}-${env:PROJECT_NM}
    maxPreviousDeploymentArtifacts: 5
  deploymentPrefix: ${env:env}
  # iamRoleStatements: ${file(./serverless-config/roles.yml)}

functions: ${file(./serverless-config/functions.yml)}
  # Resources: ${file(./serverless-config/dbresources.yml)}